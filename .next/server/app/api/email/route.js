"use strict";(()=>{var e={};e.id=433,e.ids=[433],e.modules={1185:e=>{e.exports=require("mongoose")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9351:(e,t,a)=>{a.r(t),a.d(t,{originalPathname:()=>h,patchFetch:()=>P,requestAsyncStorage:()=>f,routeModule:()=>v,serverHooks:()=>y,staticGenerationAsyncStorage:()=>w});var r={};a.r(r),a.d(r,{DELETE:()=>x,GET:()=>g,POST:()=>m});var n=a(9303),s=a(8716),i=a(670),o=a(3473),u=a(1185),l=a.n(u);let p=new(l()).Schema({email:{type:String,required:!0},date:{type:Date,default:Date.now()}}),c=l().models.email||l().model("email",p);var d=a(7070);async function m(e){let t=await e.formData(),a={email:`${t.get("email")}`};return await c.create(a),d.NextResponse.json({success:!0,msg:"Email Subscribed"})}async function g(e){let t=await c.find({});return d.NextResponse.json({emails:t})}async function x(e){let t=await e.nextUrl.searchParams.get("id");return await c.findByIdAndDelete(t),d.NextResponse.json({success:!0,msg:"Email deleted Successfully"})}(async()=>{await (0,o.u)()})();let v=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/email/route",pathname:"/api/email",filename:"route",bundlePath:"app/api/email/route"},resolvedPagePath:"D:\\Projects\\next-blog-app\\app\\api\\email\\route.js",nextConfigOutput:"",userland:r}),{requestAsyncStorage:f,staticGenerationAsyncStorage:w,serverHooks:y}=v,h="/api/email/route";function P(){return(0,i.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:w})}},3473:(e,t,a)=>{a.d(t,{u:()=>s});var r=a(1185),n=a.n(r);let s=async()=>{await n().connect("mongodb+srv://pvs:pvs1212@cluster0.glwgm.mongodb.net/"),console.log("DB Connected!")}}};var t=require("../../../webpack-runtime.js");t.C(e);var a=e=>t(t.s=e),r=t.X(0,[948,972],()=>a(9351));module.exports=r})();